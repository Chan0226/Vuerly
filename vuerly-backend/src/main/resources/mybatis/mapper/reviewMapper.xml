<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vuerlyServer.vuerly.review.repository.ReviewDAO">
    <resultMap id="ProductDTO" type="vuerlyServer.vuerly.product.model.ProductDTO">
        <result column="product_name" property="product_name"></result>
        <result column="thumbnail" property="thumbnail"></result>
        <result column="price" property="price"></result>
        <result column="sale" property="sale"></result>
    </resultMap>

    <resultMap id="MemberVO" type="vuerlyServer.vuerly.member.model.MemberVO">
        <result column="name" property="name"></result>
        <result column="addr" property="addr"></result>
        <result column="email" property="email"></result>
        <result column="point" property="point"></result>
    </resultMap>

    <resultMap id="ReviewVO" type="vuerlyServer.vuerly.review.model.ReviewVO">
        <result column="num" property="num"></result>
        <result column="content" property="content"></result>
        <result column="photo" property="photo"></result>
        <result column="created_at" property="created_at"></result>
        <result column="product_num" property="product_num"></result>
        <result column="member_num" property="member_num"></result>
        <collection property="productDTO" resultMap="ProductDTO" />
        <collection property="memberVO" resultMap="MemberVO" />
    </resultMap>

    <!-- 조인문은 resultType이 아니라 resultMap을 사용(위에서 정의한 join문 id)-->
    <select id="getReviewInfo" parameterType="int" resultMap="ReviewVO">
        SELECT r.num,r.content, r.photo,r.created_at,r.product_num,r.member_num,
        p.name AS product_name, p.thumbnail, p.price, p.sale
        FROM review r
        JOIN product p
        ON p.num = r.product_num
        WHERE r.member_num = #{member_num}
        ORDER BY r.created_at DESC
    </select>

    <!-- 리뷰 작성 mapper-->
    <insert id="insertReview" parameterType="vuerlyServer.vuerly.review.model.ReviewDTO">
        INSERT INTO review(content,product_num,member_num)
        VALUES (#{content},#{product_num},#{member_num})
    </insert>

    <!-- 리뷰 작성 후, review_status 변경   -->
    <update id="updateReviewStatus" parameterType="int">
        UPDATE order_product
        SET review_status = 1
        WHERE order_num = #{order_num}
    </update>

    <!-- 리뷰 수정 mapper   -->
    <update id="updateReview" parameterType="vuerlyServer.vuerly.review.model.ReviewDTO">
        UPDATE review
        SET content=#{content}, created_at=NOW()
        where num=#{num}
    </update>

    <!-- 특정 리뷰 select mapper   -->
    <select id="getSelectReview" parameterType="int" resultMap="ReviewVO">
        SELECT r.num,r.content,
        p.name AS product_name, p.thumbnail
        FROM review r
        JOIN product p
        ON p.num = r.product_num
        WHERE r.num = #{num}
    </select>

    <select id="getReviewList" parameterType="int" resultMap="ReviewVO">
        SELECT
            r.num,
            r.content,
            r.photo,
            r.created_at,
            r.product_num,
            r.member_num,
            p.name AS product_name,
            p.thumbnail,
            m.name
        FROM review r
        JOIN product p
        ON r.product_num = p.num
        JOIN member m
        ON r.member_num = m.num
        WHERE r.product_num = #{product_num}
        ORDER BY r.created_at DESC
    </select>

    <select id="getWritableReview" parameterType="int" resultType="vuerlyServer.vuerly.review.model.WritableReviewDTO">
        SELECT DISTINCT
        p.num AS product_num,p.name AS product_name, p.thumbnail, p.subtitle, o.num AS order_num
        FROM product p
        JOIN order_product a
        ON p.num = a.product_num
        JOIN VUERLY.order o
        ON o.num = a.order_num
        WHERE o.member_num = #{member_num}
        AND a.review_status = 0
    </select>
</mapper>